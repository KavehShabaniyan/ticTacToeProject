{"version":3,"sources":["components/Sq.jsx","components/GameBoard.jsx","components/App.jsx","index.js"],"names":["Sq","props","Button","variant","color","style","width","height","onClick","value","Board","makeSquare","i","squares","className","winnerFinder","sqr","winCondition","j","length","l","m","n","App","state","nextPlayer","sN","history","Array","fill","this","slice","setState","concat","step","current","winner","moves","map","move","desc","jumpTo","status","backgroundColor","position","padding","paddingLeft","minWidth","whatHappenByClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e476b186.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nexport default function Sq(props) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      style={{ width: 100, height: 100 }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Sq from \"./Sq\";\r\nexport default function Board(props) {\r\n  const makeSquare = (i) => {\r\n    return <Sq value={props.squares[i]} onClick={() => props.onClick(i)}></Sq>;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row_one\">\r\n        {makeSquare(0)}\r\n        {makeSquare(1)}\r\n        {makeSquare(2)}\r\n      </div>\r\n      <div className=\"row_two\">\r\n        {makeSquare(3)}\r\n        {makeSquare(4)}\r\n        {makeSquare(5)}\r\n      </div>\r\n      <div className=\"row_three\">\r\n        {makeSquare(6)}\r\n        {makeSquare(7)}\r\n        {makeSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport { Button } from \"@material-ui/core\";\r\nfunction winnerFinder(sqr) {\r\n  const winCondition = [\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [0, 4, 8],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let j = 0; j < winCondition.length; j++) {\r\n    const [l, m, n] = winCondition[j];\r\n    if (sqr[l] && sqr[l] === sqr[m] && sqr[m] === sqr[n]) {\r\n      return sqr[l];\r\n    }\r\n  }\r\n  return null;\r\n}\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nextPlayer: true,\r\n      sN: 0,\r\n      history: [{ squares: Array(9).fill(null) }],\r\n    };\r\n  }\r\n  whatHappenByClick(i) {\r\n    const history = this.state.history.slice(0, this.state.sN + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winner = winnerFinder(squares);\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.nextPlayer ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat({\r\n        squares: squares,\r\n      }),\r\n      nextPlayer: !this.state.nextPlayer,\r\n      sN: history.length,\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      sN: step,\r\n      nextPlayer: step % 2 === 0,\r\n      history: this.state.history.slice(0, step + 1),\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = winnerFinder(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Move number: \" + move : \"Start ...\";\r\n      return (\r\n        <li key={move}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.jumpTo(move);\r\n            }}\r\n          >\r\n            {desc}\r\n          </Button>\r\n        </li>\r\n      );\r\n    });\r\n    let status = winner\r\n      ? \"Winner : \" + winner\r\n      : (this.state.nextPlayer ? \"X\" : \"O\") + \" Is Next player\";\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"lightblue\",\r\n          position: \"absolute\",\r\n          padding: \"5rem\",\r\n          paddingLeft: \"10%\",\r\n          width: \"outo\",\r\n          minWidth: \"400px\",\r\n        }}\r\n      >\r\n        <div>\r\n          <GameBoard\r\n            onClick={(i) => this.whatHappenByClick(i)}\r\n            squares={current.squares}\r\n          ></GameBoard>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <br></br>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n              {status}\r\n            </Button>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n ReactDOM.render(<App />,document.getElementById(\"root\"));\n"],"sourceRoot":""}